{"version":3,"sources":["src/main.js"],"names":["window","onload","urlParams","URLSearchParams","location","search","vue","Vue","el","components","data","profile","coordinates","contours","denoise","generalize","created","mounted","$nextTick","mapboxgl","accessToken","get","localStorage","getItem","map","Map","container","style","center","zoom","hash","addControl","NavigationControl","geolocate","GeolocateControl","on","geolocation","coords","longitude","latitude","geocoder","MapboxGeocoder","response","result","marker","Marker","draggable","getLngLat","toArray","addSource","type","features","addLayer","id","source","layout","paint","e","lngLat","wrap","watch","value","setLngLat","addTo","isochrone","methods","xhr","XMLHttpRequest","open","Math","floor","status","console","error","responseText","geojson","JSON","parse","getSource","setData","fitBounds","turf","bbox","padding","duration","send"],"mappings":"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","file":"main.e6decf2f.js","sourceRoot":"..","sourcesContent":["/* jshint browser:true,curly: false */\n/* global L */\n\nwindow.onload = () => {\n    let urlParams = new URLSearchParams(window.location.search);\n    window.vue = new Vue({\n        el: '#app',\n        components: {\n        },\n        data: {\n            profile: 'driving',\n            coordinates: null,\n            contours: '15,30,45,60',\n            denoise: 1.0,\n            generalize: 5\n        },\n        created: function() {\n        },\n        mounted: function() {\n            this.$nextTick(function() {\n                mapboxgl.accessToken = urlParams.get('access_token') || localStorage.getItem('MapboxAccessToken');\n                this.map = new mapboxgl.Map({\n                    container: 'map',\n                    style: 'mapbox://styles/mapbox/streets-v11',\n                    center: [0, 0],\n                    zoom: 0,\n                    hash: true\n                });\n                this.map.addControl(new mapboxgl.NavigationControl());\n                this.geolocate = new mapboxgl.GeolocateControl()\n                this.geolocate.on('geolocate', (geolocation) => {\n                    if (geolocation && geolocation.coords) {\n                        this.coordinates = [geolocation.coords.longitude, geolocation.coords.latitude];\n                    }\n                })\n                this.map.addControl(this.geolocate);\n                this.geocoder = new MapboxGeocoder({\n                    accessToken: mapboxgl.accessToken\n                });\n                this.geocoder.on('result', (response) => {\n                    this.coordinates = response.result.center;\n                });\n                this.map.addControl(this.geocoder, 'top-left');\n\n                this.marker = new mapboxgl.Marker({\n                    draggable: true\n                });\n                this.marker.on('dragend', () => {\n                    this.coordinates = this.marker.getLngLat().toArray();\n                });\n\n                this.map.on('style.load', () => {\n                    this.map.addSource('isochrones', { type: 'geojson', data: {\n                        type: 'FeatureCollection',\n                        features: []\n                    }});\n                    this.map.addLayer({\n                        id: 'fill',\n                        type: 'fill',\n                        source: 'isochrones',\n                        \"layout\": {},\n                        \"paint\": {\"fill-color\": [\"get\", \"fill\"], \"fill-opacity\": 0.3}\n                    });\n                    this.map.addLayer({\n                        id: 'outline-shadow',\n                        type: 'line',\n                        source: 'isochrones',\n                        \"layout\": {},\n                        \"paint\": {\n                            \"line-color\": [\"get\", \"color\"],\n                            \"line-offset\": 3,\n                            \"line-opacity\": 0.3,\n                            \"line-width\": 6\n                        }\n                    });\n                    this.map.addLayer({\n                        id: 'outline',\n                        type: 'line',\n                        source: 'isochrones',\n                        \"layout\": {\"line-join\": \"round\"},\n                        \"paint\": {\n                            \"line-color\": [\"get\", \"color\"],\n                            \"line-opacity\": 1,\n                            \"line-width\": 3\n                        }\n                    });\n                    this.map.addLayer({\n                        id: 'label',\n                        type: 'symbol',\n                        source: 'isochrones',\n                        layout: {\n                            \"text-field\": [\"to-string\", [\"get\", \"contour\"]],\n                            \"symbol-placement\": \"line\",\n                            \"symbol-spacing\": 50,\n                            \"text-font\": [\"Open Sans Bold\", \"Arial Unicode MS Regular\"],\n                            \"text-max-angle\": 35,\n                            \"text-offset\": [0, 0.5]\n                        },\n                        paint: {\n                            \"text-halo-width\": 5,\n                            \"text-halo-color\": [\"get\", \"color\"],\n                            \"text-color\": \"hsl(0, 0%, 100%)\"\n                        }\n                    });\n                });\n\n                this.map.on('load', () => {\n                });\n\n                this.map.on('click', (e) => {\n                    this.coordinates = e.lngLat.wrap().toArray();\n                });\n            });\n        },\n        watch: {\n            coordinates: function(value) {\n                this.marker\n                    .setLngLat(value)\n                    .addTo(this.map);\n                this.isochrone();\n            },\n            profile: function(value) {\n                this.isochrone();\n            },\n            contours: function(value) {\n                this.isochrone();\n            },\n            denoise: function(value) {\n                this.isochrone();\n            },\n            generalize: function(value) {\n                this.isochrone();\n            }\n        },\n        methods: {\n            isochrone: function() {\n                let xhr = new XMLHttpRequest();\n                xhr.open('GET', `https://api.mapbox.com/isochrone/v1/mapbox/${this.profile}/${this.coordinates}?contours_minutes=${this.contours}&polygons=true&generalize=${this.generalize}&denoise=${this.denoise}&access_token=${mapboxgl.accessToken}`);\n                xhr.onload = () => {\n                    if (Math.floor(xhr.status / 100) * 100 !== 200) return console.error(xhr.status, xhr.responseText);\n                    const geojson = JSON.parse(xhr.responseText);\n                    this.map.getSource('isochrones').setData(geojson);\n                    this.map.fitBounds(turf.bbox(geojson), {\n                        padding: 20,\n                        duration: 1000\n                    });\n\n                }\n                xhr.send();\n            }\n        }\n    });\n}\n"]}